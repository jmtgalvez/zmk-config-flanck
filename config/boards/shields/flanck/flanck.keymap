#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

&lt {
    tapping-term-ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &kp TAB              &kp Q       &kp W       &kp E       &kp R       &kp T         &kp Y           &kp U       &kp I       &kp O       &kp P       &kp LG(L)
   &lt 5 ESC            &kp A       &kp S       &kp D       &kp F       &kp G         &kp H           &kp J       &kp K       &kp L       &kp SEMI    &kp SINGLE_QUOTE
   &kp LSHIFT           &kp Z       &kp X       &kp C       &kp V       &kp B         &kp N           &kp M       &kp COMMA   &kp DOT     &kp SLASH   &mt RSHIFT CAPS
   &kp LCTRL            &mo 4       &kp LGUI    &kp LALT    &kp SPACE   &mo 1         &mo 2           &kp BSPC    &kp DEL     &kp RALT    &kp RGUI    &kp RETURN
            >;
        };

        lower_layer {
            bindings = <
   &trans               &kp PG_UP   &kp HOME    &kp UP      &kp END     &kp C_VOL_UP  &kp KP_NUMLOCK  &kp KP_N7   &kp KP_N8    &kp KP_N9   &kp PLUS   &kp BSLH
   &kp GRAVE            &kp PG_DN   &kp LEFT    &kp DOWN    &kp RIGHT   &kp C_VOL_DN  &none           &kp KP_N4   &kp KP_N5    &kp KP_N6   &kp MINUS  &kp UNDER
   &trans               &kp INSERT  &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp C_MUTE    &none           &kp KP_N1   &kp KP_N2    &kp KP_N3   &kp STAR   &kp SLASH
   &trans               &none       &trans      &trans      &trans      &trans        &mo 3           &kp KP_N0   &kp KP_DOT   &kp RALT    &kp RGUI   &kp EQUAL
            >;
        };
            
        raise_layer {
            bindings = <
   &trans               &kp N1      &kp N2      &kp N3      &kp N4      &kp N5        &kp N6        &kp N7        &kp N8        &kp N9          &kp N0        &kp PIPE
   &kp TILDE            &kp EXCL    &kp AT      &kp HASH    &kp DOLLAR  &kp PERCENT   &kp CARET     &kp AMPS      &kp STAR      &kp LPAR        &kp RPAR      &kp UNDER
   &kp CAPS             &kp LBKT    &kp RBKT    &kp LBRC    &kp RBRC    &none         &none         &kp PSCRN     &kp SLCK      &kp PAUSE_BREAK &none         &none 
   &trans               &trans      &trans      &trans      &trans      &mo 3         &trans        &none         &none         &kp RALT        &kp RGUI      &kp LA(PSCRN)
           >;
        };

        nav_layer {
            bindings = <
    &trans              &kp LG(N1)  &kp LG(N2)   &kp LG(N3)   &kp LG(N4)       &kp LG(N5)   &none    &none    &kp LG(UP)   &kp LG(DOWN)  &none      &none
    &kp F1              &kp F2      &kp F3  &kp F4  &kp F5      &kp F6  &kp F7   &kp F8   &kp F9       &kp F10       &kp F11    &kp F12
    &kp F13             &kp F14     &kp F15 &kp F16 &kp F17     &kp F18 &kp F19  &kp F20  &kp F21      &kp F22       &kp F23    &kp F24
    &kp LG(LC(LEFT))    &trans      &trans  &trans  &trans      &trans  &trans   &trans   &trans       &trans        &trans     &kp LG(LC(RIGHT))
           >;
        };

        misc_layer {
            bindings = <
  &out OUT_BLE   &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &none  &none  &none  &none  &none  &bootloader
  &bt BT_CLR     &bt BT_DISC 0   &bt BT_DISC 1   &bt BT_DISC 2   &bt BT_DISC 3   &bt BT_DISC 4   &none  &none  &none  &none  &none  &none
  &bt BT_CLR_ALL &none           &none           &none           &none           &none           &none  &none  &none  &none  &none  &none   
  &out OUT_USB   &trans          &none           &none           &none           &none           &none  &none  &none  &none  &none  &ext_power EP_TOG            >; 
        };
    };
};
